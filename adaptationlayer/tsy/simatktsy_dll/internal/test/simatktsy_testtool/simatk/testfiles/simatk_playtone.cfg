//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  

//
// Precondition: 
// - Detailed description can be found from Quality Center's Project: CoreSW_CASW/Module Tests/SIM ATK TSY/SimAtkTSY_testtool
//
// Script description:
//

// Proactive command
///////////////////////

// Tone
//
// KToneNotSet                         =-1,   ///< Initialization value used within constructor(s)
// KDialTone                           =0x01, ///< Dial tone.
// KCalledSubscriberBusy               =0x02, ///< Called subscriber busy.
// KCongestion                         =0x03, ///< Congestion.
// KRadioPathAcknowledge               =0x04, ///< Radio path acknowledge.
// KRadioPathNotAvailableCallDropped   =0x05, ///< Radio path not available/Call dropped.
// KErrorSpecialInfo                   =0x06, ///< Error/Special information.
// KCallWaitingTone                    =0x07, ///< Call waiting tone.
// KRingingTone                        =0x08, ///< Ringing tone.
// KGeneralBeep                        =0x10, ///< General beep.
// KPositiveTone                       =0x11, ///< Positive acknowledgement tone.
// KNegativeTone                       =0x12, ///< Negative acknowledgement or error tone.
// KUserSelectedToneIncomingSpeech     =0x13, ///< Ringing tone as selected by the user for incoming speech call.
// KUserSelectedToneIncomingSms        =0x14  ///< Alert tone as selected by the user for incoming SMS.

// AlphaId
//  Enter the text as unicode hex digits. Example: TextUnicode 61 62 63
//  Enter the text inside the quotes. Example: "abc"
//  If "-character(s) are used within alpha id, use equivalent hexadecimal value \x22 instead. Example in SEQ 1.1.10.

// Duration
//  TimeUnit, unit used to encode the duration
//      0 TimeUnitNotSet. Initialization value used within constructor(s).
//      1 No duration has been provided. The ME should default to general beep.
//      2 The duration is expressed in minutes.
//      3 The duration is expressed in seconds.
//      4 The duration is expressed in tenths of seconds.
//  NumOfUnits
//     Valid range is 1 to 255
//  Example 10 minutes: Duration 2 10

// IconId
//  IconQualifier
//      0 NotSet
//      1 NoIconId
//      2 SelfExplanatory
//      3 NotSelfExplanatory
//  IconIdentifier
//      Id number
//  Example SelfExplanatory ID 5: IconId 2 5



// Terminal Response //
///////////////////////

// GeneralResult
//  General result of the proactive command. Default command performed successfully.

// AdditionalInfo
//  Enter the text inside the quotes

// AdditionalInfoUnicode
//  Enter the text as unicode hex digits

// InfoType
// If the value of iGeneralResult requires additional information,
// set this to MeProblem (2).  Otherwise set to
// NoAdditionalInfo (1). Default no additional info.


[Test]
title MOD_0006.001_SIM_ATK_TSY_[PLAY TONE - Play all tones]

create SimAtk call
create SimAtkNotify notify1

// open all
call Connect RTelServer
call Load PhoneTsy.tsy
call Open DefaultPhone
call Open SAT
call Open IscControl

// Load ISC XML -file
call LoadIscTests SIMATK_PlayTone.xml

// SEQ 1.1
print "Send PLAYTONE 1.1.1"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call RunIscTestCase 6 101
waittestclass notify1
call CheckProactiveCommand Tone 0x01 AlphaId "Dial Tone" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.2"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x02 AlphaId "Sub. Busy" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.3"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x03 AlphaId "Congestion" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.4"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x04 AlphaId "RP Ack" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.5"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x05 AlphaId "No RP" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.6"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x06 AlphaId "Spec Info" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.7"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x07 AlphaId "Call Wait" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.8"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x08 AlphaId "Ring Tone" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.9"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x01 AlphaId "Dial Tone" Duration 3 5
call SendTerminalResponse

print "Send PLAYTONE 1.1.10"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone -1 AlphaId "This command instructs the ME to play an audio tone. Upon receiving this command, the ME shall check if it is currently in, or in the process of setting up (SET-UP message sent to the network, see GSM\x2204.08\x22(8)), a speech call. - If the ME I" Duration 1 0
call SendTerminalResponse

print "Send PLAYTONE 1.1.11"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x10 AlphaId "Beep" Duration 3 1
call SendTerminalResponse

print "Send PLAYTONE 1.1.12"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x11 AlphaId "Positive" Duration 3 1
call SendTerminalResponse

print "Send PLAYTONE 1.1.13"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x12 AlphaId "Negative" Duration 3 1
call SendTerminalResponse

print "Send PLAYTONE 1.1.14"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x10 AlphaId "Quick" Duration 4 2
call SendTerminalResponse

print "Send PLAYTONE 1.1.15"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone 0x06 AlphaId "<ABORT>" Duration 2 1
call SendTerminalResponse GeneralResult 10

print "Send PLAYTONE 1.1.16"
notify1 UseObjectAddress call ESatNotifyPlayTonePCmd
call SyncIscTestCase
waittestclass notify1
call CheckProactiveCommand Tone -1 Duration 1 0
call SendTerminalResponse GeneralResult 30
call WaitForRequest

// End of SEQ 1.1

// close all
call Close IscControl
call Close SAT
call Unload PhoneTsy.tsy
call Close RTelServer
delete call
delete notify1
[Endtest]
