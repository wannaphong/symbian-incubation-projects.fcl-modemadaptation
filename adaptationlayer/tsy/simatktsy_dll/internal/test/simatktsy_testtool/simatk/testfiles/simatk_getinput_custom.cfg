//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  

//
// Precondition: 
// - Detailed description can be found from Quality Center's Project: CoreSW_CASW/Module Tests/SIM ATK TSY/SimAtkTSY_testtool
//
// Script description:
//

// Proactive command //
///////////////////////

// InputDisplayOption
//  0 EInputDisplayOptionNotSet, Value used in constructor.
//  1 EDisplayUserInput
//  2 EHideUserInput

// RspFormat
//  0 EGetInputRspFormatNotSet, Value used in constructor
//  1 EDigitOnlyUnpacked
//  2 EDigitOnlyPacked
//  3 ESmsDefaultAlphabetUnpacked
//  4 ESmsDefaultAlphabetPacked
//  5 EUcs2Alphabet

// RspLength
//  0-255 MinRspLength
//  0-255 MaxRspLength
// Example: RspLength 0 10

// DefaultText (Optional, default = "")
//  Enter the text inside the quotes or as unicode hex digits. Example: Text "abc" or Text 61 62 63

// Text
//  Enter the text inside the quotes or as unicode hex digits. Example: Text "abc" or Text 61 62 63

// IconId (Optional, default = IconId 0 0)
//  IconQualifier
//      0 NotSet
//      1 NoIconId
//      2 SelfExplanatory
//      3 NotSelfExplanatory
//  IconIdentifier
//      Id number
//  Example SelfExplanatory ID 5: IconId 2 5

// Help (Optional, default = Help 2)
//  0 EHelpNotSet, Initialization value used within constructor(s).
//  1 Help information available to the user.
//  2 No help information is available to the user.

// Terminal Response //
///////////////////////

// GeneralResult (Optional, default = Command performed successfully)
//  General result of the proactive command.

// AdditionalInfo (Optional, default = "" )
//  Enter the text inside the quotes or as unicode hex digits. Example: Text "abc" or Text 61 62 63

// InfoType (Optional, default = No Additional info)
//  Set to TextString (0x0020) to return a string.  Some error values
//  of GeneralResult require additional information, in which case set
//  this to MeProblem (0x0002).  Otherwise set to NoAdditionalInfo (0x0001).

// RspFormat
//  See above

[Test]
title MOD_1007.001_SIM_ATK_TSY_[GET INPUT - Various data coding schemes]

create SimAtk simatk
create SimAtkNotify notify

// connecting to ETel server
simatk Connect RTelServer
// Load TSY module
simatk Load PhoneTsy.tsy
// open phone module
simatk Open DefaultPhone
// Open SAT API
simatk Open SAT

// Open ISC Test control
simatk Open IscControl
// Load ISC XML -file
simatk LoadIscTests SimAtk_GetInput_custom.xml

// Sequence 1: All GSM alphabets, unpacked
notify UseObjectAddress simatk ESatNotifyGetInputPCmd
simatk RunIscTestCase 1007 101
waittestclass notify
// Text contains all GSM characters converted to unicode
simatk CheckProactiveCommand InputDisplayOption 1 RspFormat 3 RspLength 0 255 Text 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 20 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0 A0
simatk SendTerminalResponse InfoType TextString RspFormat 3 AdditionalInfo 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0
simatk WaitForRequest

// Sequence 2: All GSM alphabets, packed
notify UseObjectAddress simatk ESatNotifyGetInputPCmd
simatk RunIscTestCase 1007 102
waittestclass notify
// Text contains all GSM characters converted to unicode
simatk CheckProactiveCommand InputDisplayOption 1 RspFormat 4 RspLength 0 255 Text 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 20 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0 A0
simatk SendTerminalResponse InfoType TextString RspFormat 4 AdditionalInfo 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0
simatk WaitForRequest

// Sequence 3: Unicode letters
notify UseObjectAddress simatk ESatNotifyGetInputPCmd
simatk RunIscTestCase 1007 103
waittestclass notify
// Text contains all GSM characters (excluding from B to Y) converted to unicode
simatk CheckProactiveCommand InputDisplayOption 1 RspFormat 5 RspLength 0 255 Text 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 20 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0 1B14 FFFF
simatk SendTerminalResponse InfoType TextString RspFormat 5 AdditionalInfo 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 20 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0 1B14 FFFF
simatk WaitForRequest

// Sequence 4: Special letter mappings (á -> a etc.)
notify UseObjectAddress simatk ESatNotifyGetInputPCmd
simatk RunIscTestCase 1007 104
waittestclass notify
simatk CheckProactiveCommand InputDisplayOption 1 RspFormat 3 RspLength 0 255 Text 40 A3 24 A5 E8 E9 F9 EC F2 E7 0A D8 F8 0D C5 E5 394 5F 3A6 393 39B 3A9 3A0 3A8 3A3 398 39E C6 E6 DF C9 20 21 22 23 A4 25 26 27 28 29 2A 2B 2C 2D 2E 2F 30 31 32 33 34 35 36 37 38 39 3A 3B 3C 3D 3E 3F A1 41 42 43 44 45 46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55 56 57 58 59 5A C4 D6 D1 DC A7 BF 61 62 63 64 65 66 67 68 69 6A 6B 6C 6D 6E 6F 70 71 72 73 74 75 76 77 78 79 7A E4 F6 F1 FC E0 0C 5E 20 7B 7D 5C 5B 7E 5D 7C 20AC 40 E0 A0
simatk SendTerminalResponse InfoType TextString RspFormat 3 AdditionalInfo A2 DE FE F0 F7 60 7F C0 C1 C2 C3 C8 CA CB CC CD CE CF D0 D2 D3 D4 D5 D7 D9 DA DB DD E1 E2 E3 EA EB ED EE EF F3 F4 F5 FA FB FD FF
simatk WaitForRequest

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]
