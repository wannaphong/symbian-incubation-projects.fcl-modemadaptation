//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  

//
// Precondition: 
// - Detailed description can be found from Quality Center's Project: CoreSW_CASW/Module Tests/SIM ATK TSY/SimAtkTSY_testtool
//
// Script description (Note: Some test cases include proactive commands. See appropriate command's config file for 
// specific parameters ):

// CC Result //
///////////////

// AlphaIdValidity (optional, default = 3, not present)
// 	Indicates the validity of the alpha ID
//  	0 Value used with constructor
//  	1 Alpha ID is valid.  It should be displayed
//  	2 Alpha ID is null.  Display nothing.
//  	3 Alpha ID is not present.  The client can dislay whatever it likes.

// AlphaId
//  Enter the text inside the quotes or as unicode hex digits. Example: Text "abc" or Text 61 62 63

// Type (optional, default = 0)
//	Type of the completed Call control
//	0 ECcTypeNotSet, Initialization value used within constructor(s).
//	1 ECcAddress, Call control by SIM has transformed the original request into a new call set up.
//	2 ECcSsString, Call control by SIM has transformed the original request into a new SEND SS
//	3 ECcUssdString, Call control by SIM has transformed the original request into a new SEND USSD
//	4 ECcPDPParameters, Call control by SIM has transformed the original request into a new OPEN CHANNEL

// ControlResult (mandatory)
//  0 EControlResultNotSet, Initialization value used within constructor(s)
//  1 EAllowedNoModification
//  2 ENotAllowed
//  3 EAllowedWithModifications

// ActionOriginator (optional, default = 0)
//	Specifies to the client who should perform the modified action
//	0 EActionOriginatorNotSet, Initialization value used within constructor(s) or if the call control does not require a new action
//		to be performed
//	1 EClientOriginator, The client is responsible for performing the action described in the call control class.
//	2 EMeSideOriginator, The ME Side is responsible for performing the action described in the call control class. The
//		client side should still display any provided alpha identifier.

// BCRepeatIndicator
//	Bearer Capability Repeat Indicator (default = 0)
//		0 The alternate mode of the Bearer Capability Repeat Indicator.
//		1 Depreciated.
//		2 Support of fallback - mode 1 preferred, mode 2 selected if setup of mode 1 fails.
//		3 Service change and fallback - mode 1 alternate mode 2, mode 1 preferred
// Example: BCRepeatIndicator 3

// Address
//  Enter the address or SS string inside the quotes
//  TypeOfNumber (Optional, default = 1, UnknownNumber)
//      0 TypeOfNumberNotSet, initialization value used within constructor(s).
//      1 UnknownNumber, the user or the network has no knowledge of the type of network.
//      2 InternationalNumber, international number.
//      3 NationalNumber, national number.
//      4 NetworkSpecificNumber, administration/service number specific to the serving network, 
//        e.g. used to access an operator.
//      5 DedicatedNumber, called dedicated access / short code in GSM/WCDMA. Corresponds to
//        TMobileTON::ESubscriberNumber in ETel MM API.
//      6 AlphanumericNumber, alphanumeric number.
//      7 EAbbreviatedNumber, abbreviated number. 
//  NumberingPlan (Optional, default = 1, UnknownNumberingPlan)
//      0 NumberingPlanNotSet, initialization value used within constructor(s).
//      1 UnknownNumberingPlan, the user or the network has no knowledge of the numbering plan.
//      2 IsdnNumberPlan, ISDN / telephony numbering plan.
//      3 DataNumberPlan, data numbering plan.
//      4 TelexNumberPlan, telex numbering plan.
//      5 ServiceCentreSpecificPlan1, The service centre specific plan is used to indicate a numbering
//        plan specific to External Short Message Entities attached to the SMS centre.
//      6 ServiceCentreSpecificPlan2, the service centre specific plan is used to indicate a numbering
//        plan specific to External Short Message Entities attached to the SMS centre.
//      7 NationalNumberPlan, national numbering plan.
//      8 PrivateNumberPlan, private numbering plan.
//      9 ERMESNumberPlan, ERMES numbering plan.   
// Example (String "+012340123456p1p2", InternationalNumber, IsdnNumberPlan):
// Address "+012340123456p1p2" 2 2
// Example (String "*#31#", InternationalNumber, DataNumberPlan):
// Address "*#31#" 2 3

// Ccp1 & Ccp2 (Optional)
//  Enter the bearer capability config params as hex digits.
//  Example: Ccp1 61 62 63
//  Example: Ccp2 62

// SubAddress (Optional)
//  Enter the subaddress inside the quotes or as unicode hex digits.
// Example: SubAddress "abc" or SubAddress 61 62 63

// UssdString
//  Enter the text inside the quotes or as unicode hex digits. Example: UssdString "abc" or UssdString 61 62 63

// Dcs (Optional, default = 0x00)
// DataCoding scheme for USSD.
//  Enter the used data coding scheme as hexadicimal value

// PdpContextParameters
//	Modified PDP params as hex digits. Example PdpContextParameters 01 FF A1


[Test]
title MOD_0031.001_SIM_ATK_TSY_[CALL CONTROL BY SIM - Procedure for Mobile Originated calls]

create SimAtk simatk
create SimAtkNotify notify

// Open ETel and related services
simatk Connect RTelServer
simatk Load PhoneTsy.tsy
simatk Open DefaultPhone
simatk Open SAT

// For ISI-message simulation and analysis
simatk Open IscControl
simatk LoadIscTests SimAtk_CallControl.xml

// Initialization
simatk RunIscTestCase 31 001
simatk WaitForRequest

// Sequence 1.1 (CALL CONTROL BY SIM, set up call attempt by user, the SIM responds with '90 00')
simatk RunIscTestCase 31 101
simatk WaitForRequest

// Sequence 1.2 (CALL CONTROL BY SIM, set up call attempt by user, allowed without modification)
simatk RunIscTestCase 31 102
simatk WaitForRequest

// Sequence 1.3A (CALL CONTROL BY SIM, set up call attempt resulting from a set up call proactive command, allowed without modification)
notify UseObjectAddress simatk ESatNotifySetUpCallPCmd
simatk RunIscTestCase 31 103
waittestclass notify
simatk CheckProactiveCommand Address "+012340123456" 2 2 AlphaId "+012340123456"
simatk SyncIscTestCase
simatk SendTerminalResponse
simatk WaitForRequest

// Sequence 1.4 (CALL CONTROL BY SIM, set up call attempt by user, not allowed)
simatk RunIscTestCase 31 104
simatk WaitForRequest

// Sequence 1.5A (CALL CONTROL BY SIM, set up call attempt resulting from a set up call proactive command, not allowed)
notify UseObjectAddress simatk ESatNotifySetUpCallPCmd
simatk RunIscTestCase 31 105
waittestclass notify
simatk CheckProactiveCommand Address "+012340123456" 2 2 AlphaId "+012340123456"
simatk SyncIscTestCase
simatk SendTerminalResponse GeneralResult InteractionWithCCPermanentError InfoType MeProblem AdditionalInfo ActionNotAllowed
simatk WaitForRequest

// Sequence 1.6 (CALL CONTROL BY SIM, set up call attempt by user, allowed with modifications)
simatk RunIscTestCase 31 106
simatk WaitForRequest

// Sequence 1.7A (CALL CONTROL BY SIM, set up call attempt resulting from a set up call proactive command, allowed with modifications)
notify UseObjectAddress simatk ESatNotifySetUpCallPCmd
simatk RunIscTestCase 31 107
waittestclass notify
simatk CheckProactiveCommand Address "+012340123456" 2 2 AlphaId "+012340123456"
simatk SyncIscTestCase
simatk SendTerminalResponse
simatk WaitForRequest

// Sequence 1.8 (CALL CONTROL BY SIM, set up call attempt by user, allowed with modifications: emergency call)
simatk RunIscTestCase 31 108
simatk WaitForRequest

// Sequence 1.9 (CALL CONTROL BY SIM, set up call attempt by user, allowed with modifications: number in EFECC)
simatk RunIscTestCase 31 109
simatk WaitForRequest

// Sequence 1.10 (CALL CONTROL BY SIM, set up call attempt by user to an emergency call)
simatk RunIscTestCase 31 110
simatk WaitForRequest

// Sequence 1.11 (CALL CONTROL BY SIM, set up call through call register, the SIM responds with '90 00'
// Skipped. Similar case to 1.1 from SimAtkTsy point of view

// Sequence 1.12 (CALL CONTROL BY SIM, set up call through call register, allowed without modification) 
// Skipped. Similar case to 1.2 from SimAtkTsy point of view

// Sequence 1.13 (CALL CONTROL BY SIM, set up call through call register, not allowed)
// Skipped. Similar case to 1.4 from SimAtkTsy point of view

// Sequence 1.14 (CALL CONTROL BY SIM, set up call through call register, allowed with modifications) 
// Skipped. Similar case to 1.6 from SimAtkTsy point of view

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]

[Test]
title MOD_0031.002_SIM_ATK_TSY_[CALL CONTROL BY SIM - Procedure for Supplementary (SS) Services]

create SimAtk simatk
create SimAtkNotify notify

// Open ETel and related services
simatk Connect RTelServer
simatk Load PhoneTsy.tsy
simatk Open DefaultPhone
simatk Open SAT

// For ISI-message simulation and analysis
simatk Open IscControl
simatk LoadIscTests SimAtk_CallControl.xml

// Initialization
simatk RunIscTestCase 31 001
simatk WaitForRequest

// Sequence 2.1 (CALL CONTROL BY SIM, send SS, the SIM responds with '90 00')
simatk RunIscTestCase 31 201
simatk WaitForRequest

// Sequence 2.2 (CALL CONTROL BY SIM, send SS, allowed without modifications) 
simatk RunIscTestCase 31 202
simatk WaitForRequest

// Sequence 2.3 (CALL CONTROL BY SIM, send SS, not allowed) 
simatk RunIscTestCase 31 203
simatk WaitForRequest

// Sequence 2.4 (CALL CONTROL BY SIM, send SS, allowed with modifications) 
simatk RunIscTestCase 31 204
simatk WaitForRequest

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]

[Test]
title MOD_0031.003_SIM_ATK_TSY_[CALL CONTROL BY SIM - Interaction with Fixed Dialling Number (FDN)]

create SimAtk simatk
create SimAtkNotify notify

// Open ETel and related services
simatk Connect RTelServer
simatk Load PhoneTsy.tsy
simatk Open DefaultPhone
simatk Open SAT

// For ISI-message simulation and analysis
simatk Open IscControl
simatk LoadIscTests SimAtk_CallControl.xml

// Initialization
simatk RunIscTestCase 31 001
simatk WaitForRequest

// Sequence 3.1 (CALL CONTROL BY SIM , set up a call not in EFFDN)
// Skipped. FDN check is already made by Modem Call server and initiated call is rejected.
// Therefore no resource control request is made.

// Sequence 3.2 (CALL CONTROL BY SIM , set up a call in EFFDN , the SIM responds with '90 00')
// FDN check is already made by Modem Call server and sequence proceeds with resource control.
simatk RunIscTestCase 31 302
simatk WaitForRequest

// Sequence 3.3 (CALL CONTROL BY SIM , set up a call in EFFDN, Allowed without modifications)
// FDN check is already made by Modem Call server and sequence proceeds with resource control.
simatk RunIscTestCase 31 303
simatk WaitForRequest

// Sequence 3.4 (CALL CONTROL BY SIM , set up a call in EFFDN , Not Allowed)
// FDN check is already made by Modem Call server and sequence proceeds with resource control.
simatk RunIscTestCase 31 304
simatk WaitForRequest

// Sequence 3.5 (CALL CONTROL BY SIM , set up a call in EFFDN , Allowed with modifications)
// FDN check is already made by Modem Call server and sequence proceeds with resource control.
simatk RunIscTestCase 31 305
simatk WaitForRequest

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]
