//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  

// Precondition: 
// - Detailed description can be found from Quality Center's Project: CoreSW_CASW/Module Tests/SIM ATK TSY/SimAtkTSY_testtool
//
// Script description:

// Proactive command //
///////////////////////

// AlphaId
//  Enter the text inside the quotes or as unicode hex digits. Example: AlphaId "abc" or AlphaId 61 62 63

// DefaultItemId (Optional)
//  ID of the default menu item. Example: DefaultItemId FF

// Help (Optional, default = Help 2)
//  0 EHelpNotSet, Initialization value used within constructor(s).
//  1 Help information available to the user.
//  2 No help information is available to the user.

// IconId (Optional, default = IconId 0 0)
//  IconQualifier
//      0 NotSet
//      1 NoIconId
//      2 SelfExplanatory
//      3 NotSelfExplanatory
//  IconIdentifier
//      Id number
//  Example SelfExplanatory ID 5: IconId 2 5

// IconListQualifier (Optional, default = NoIconId )
//  0 NotSet
//  1 NoIconId
//  2 SelfExplanatory
//  3 NotSelfExplanatory

// MenuContent (Optional, default = 1, KItems)
//  1 KItems, menu is made of items.
//  2 KItemNextActions, menu is made of items and item next actions.
//  4 KItemIconIds, Menu is made of items and item icon IDs.
// Note: These are flags. To indicate that the menu contains items, item next actions 
// and item icon ids, MenuContent would be 0x07.

// MenuItem
// Use one of following sequences for each menu item
//  MenuItem ItemString ItemId
// OR
//  MenuItem ItemString ItemId NextAction
// OR
//  MenuItem ItemString ItemId IconId
// OR
//  MenuItem ItemString ItemId NextAction IconId
// For example: MenuItem "Item 1" 1 MenuItem "Item 2" 2

// NumberOfItems
//  Number of items in menu

// Preference (Optional, default = 1, NoSelectionPreference )
//  0 ESelectionPreferenceNotSet, Initialization value
//  1 ENoSelectionPreference, Use of soft keys is not required
//  2 ESoftKeyPreferred, Use soft keys where appropriate.

// PresentationType (Optional, default = 1, ENotSpecified)
//  0 EPresentationTypeNotSet, value used in constructor.
//  1 ENotSpecified, menu content type not specified
//  2 EDataValues, the menu contains a choice of data values
//  3 ENavigationOptions, the menu contains a choice of navigation options

// RemoveMenu (Optional, default = False )
//  0 EFalse
//  1 ETrue
// Use this parameter if proactive command should remove the menu.
// If this parameter is used, all the all the other parameters are ignored.


// Terminal Response //
///////////////////////

// GeneralResult (Optional, default = Command performed successfully)
//  General result of the proactive command.

// AdditionalInfo (Optional, default = "" )
//  Enter the text inside the quotes or as unicode hex digits. Example: Text "abc" or Text 61 62 63

// InfoType (Optional, default = No Additional info)
//  Set to ItemIdentifier (40) when returning the user's choice. Some error values of
//  GeneralResult require additional information, in  which case set this to MeProblem (2).
//  Otherwise set to NoAdditionalInfo (1)


[Test]
title MOD_1012.001_SIM_ATK_TSY_[SELECT ITEM - Empty Item TLV]

create SimAtk simatk
create SimAtkNotify notify

// connecting to ETel server
simatk Connect RTelServer
// Load TSY module
simatk Load PhoneTsy.tsy
// open phone module
simatk Open DefaultPhone
// Open SAT API
simatk Open SAT

// Open ISC Test control
simatk Open IscControl
// Load ISC XML -file
simatk LoadIscTests SimAtk_SelectItem_custom.xml

notify UseObjectAddress simatk ESatNotifySelectItemPCmd
simatk RunIscTestCase 1012 101
waittestclass notify
simatk CheckProactiveCommand AlphaId "SelectItem" NumberOfItems 1 MenuItem "" 0
simatk SendTerminalResponse InfoType ItemIdentifier AdditionalInfo 0
simatk WaitForRequest

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]

[Test]
title MOD_1012.002_SIM_ATK_TSY_[SELECT ITEM - invalid char amount in Item data]

create SimAtk simatk
create SimAtkNotify notify

// connecting to ETel server
simatk Connect RTelServer
// Load TSY module
simatk Load PhoneTsy.tsy
// open phone module
simatk Open DefaultPhone
// Open SAT API
simatk Open SAT

// Open ISC Test control
simatk Open IscControl
// Load ISC XML -file
simatk LoadIscTests SimAtk_SelectItem_custom.xml

notify UseObjectAddress simatk ESatNotifySelectItemPCmd
simatk RunIscTestCase 1012 102
waittestclass notify
simatk CheckProactiveCommand NumberOfItems 12 MenuItem "Criollo ..." 33 MenuItem "Cristina..." 34 MenuItem "Cruz Roja" 35 MenuItem "Cruz Verde" 36 MenuItem "Daniel U..." 37 MenuItem "David..." 38 MenuItem "David..." 39 MenuItem "David..." 3a MenuItem "Dentista..." 3b MenuItem "Dentista..." 3c MenuItem "David..." 3d MenuItem "Mas..." ff
simatk SendTerminalResponse InfoType ItemIdentifier AdditionalInfo 0
simatk WaitForRequest

// close all
simatk Close IscControl
simatk Close SAT
simatk Unload PhoneTsy.tsy
simatk Close RTelServer
delete notify
delete simatk
[Endtest]
