//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  
//*


// MOD_0001.001_1_NokiaTSY_[HW Send sms message, length 149]
//
// Precondition: 
// - n/a
//
// Script description:
// - Test can be run with or without CellMO (defined by flag REAL_CELLMO_IN_USE)
// - First parameter is destination phone number
// - Second parameter is service center phone number
//
[Test]
title MOD_0001.001_1_NokiaTSY_[HW Send sms message, length 149]

create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobileSmsMessagingSendMessage

test RunIscTestCase 101
test SyncIscTestCase
test SendSMSMessage SendSMSMessage4 0408036418 +358454400046
// Send response message
pause 15000;

// EMobileSmsMessagingSendMessage
allownextresult 0
waittestclass test

test HandleSpecifiedRequests NO
delete test
[Endtest] 


// MOD_0001.002_1_NokiaTSY_[HW Read sms message from slot 1]
//
// Precondition: 
// - At least one class 2 message has to be in sms storage (more details available in Mercury Quality Center).
//
// Script description:
// - First parameter is slot number
//
[Test]
title MOD_0001.002_1_NokiaTSY_[HW Read sms message from slot 1] 
create NTT_SMS test

test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMobilePhoneStoreRead
pause 10000
test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 10000
test ReadSMSMessage 1

waittestclass test
//allownextresult –1

test HandleSpecifiedRequests NO
delete test
[Endtest]


// MOD_0001.003_1_NokiaTSY_[HW Delete sms message from slot 1]
//
// Precondition: 
// - At least one class 2 message has to be in sms storage (more details available in Mercury Quality Center).
//
// Script description:
// - First parameter is slot number
//
[Test]
title MOD_0001.003_1_NokiaTSY_[HW Delete sms message from slot 1] 
create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable

test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMobilePhoneStoreDelete

pause 15000
test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 30000

test DeleteSMSMessage 1

waittestclass test
test HandleSpecifiedRequests NO

delete test
[Endtest]



// MOD_0001.004_1_NokiaTSY_[HW Send two SMS message]
//
// Precondition: 
// - Modify destination phone number to number that you use for testing
// - Check that service center number is right
//
// Script description:
// - First parameter is destination phone number
// - Second parameter is service center phone number
//
[Test]
title MOD_0001.004_1_NokiaTSY_[HW Send two SMS message]
create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobileSmsMessagingSendMessage
test SetExpectedCompleteIPC EMobileSmsMessagingSendMessage
pause 5000

test SendTwoSMSMessages SendTwoSMSMessage1 0408036418 +358454400046
waittestclass test
pause 5000  

test SendTwoSMSMessages SendTwoSMSMessage1 0408036418 +358454400046

waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest] 


// MOD_0001.005_1_NokiaTSY_[HW Delete all sms messages]
//
// Precondition: 
// - At least two class 2 messages has to be in sms storage (more details available in Mercury Quality Center).
//
// Script description:
// - First parameter is for deleting all messages
//
[Test]
title MOD_0001.005_1_NokiaTSY_[HW Delete all sms messages] 
create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMobilePhoneStoreDeleteAll

test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 20000


pause 15000

test DeleteAllSMSMessages

waittestclass test
test HandleSpecifiedRequests NO

delete test
[Endtest]


// MOD_0001.006_1_NokiaTSY_[HW SetMoSmsBearer]
//
// Precondition: 
// - Modify destination phone number to number that you use for testing
// - Check that service center number is right
//
// Script description:
// - Possible values for SMS Bearer:
// - 0 ESmsBearerPacketOnly
// - 1 ESmsBearerCircuitOnly
// - 2 ESmsBearerPacketPreferred
// - 3 ESmsBearerCircuitPreferred
// - Only ESmsBearerPacketPreferred (2) and  ESmsBearerCircuitPreferred (3) are used in S60.
// 
// - First parameter is destination phone number
// - Second parameter is service center phone number
//
[Test]
title MOD_0001.006_1_NokiaTSY_[HW SetMoSmsBearer]
create NTT_SMS test

test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobileSmsMessagingSetMoSmsBearer
test SetExpectedCompleteIPC EMobileSmsMessagingSendMessage
test SetExpectedCompleteIPC EMobileSmsMessagingSetMoSmsBearer
test SetExpectedCompleteIPC EMobileSmsMessagingSendMessage
pause 2000

test SetMoSmsBearer 3
waittestclass test
pause 2000 

test SendSMSMessage SendSMSMessage4  04544103076 +358454400050
waittestclass test
pause 2000

test SetMoSmsBearer 2
waittestclass test
pause 2000

test SendSMSMessage SendSMSMessage4  04544103076 +358454400050

waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// MOD_0001.007_1_NokiaTSY_[HW Write SMS message which size is 149 (0x95) and store it to the slot -1 (first available index)]
//
// Precondition: 
// - Check that short message storage in SIM card is not full.
//
// Script description:
// - First parameter is destination number
// - Second parameter is number of service center
// - Third parameter is slot number (-1 first availeble slot)
//
[Test]
title MOD_0001.007_1_NokiaTSY_[HW Write SMS message which size is 149 (0x95) and store it to the slot -1 (first available index)]
create NTT_SMS test

test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMobilePhoneStoreWrite

test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 20000
test WriteSMSMessage 04544103076 +358454400046 -1
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// MOD_0001.008_1_NokiaTSY_[HW Read SMS Parameters from SIM]
//
// Precondition: 
// - n/a
//
// Script description:
// - n/a
//
[Test]
title MOD_0001.008_1_NokiaTSY_[HW Read SMS Parameters from SIM]
create NTT_SMS test
pause 1000
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobileSmsMessagingGetSmspListPhase1

test ReadSmsParameters

allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
pause 1000
delete test
[Endtest] 


// MOD_0001.009_1_NokiaTSY_[HW Store SMS Parameters to SIM]
//
// Precondition: 
// - Edit the following script parameters if necessary:
//    - SIM location, default is 1
//    - SMSC number, default is +358454400050 for Nokia Test Network
//    - Alpha tag (description) of the SMSP set
//
// Script description:
// - USE WITH CAUTION, this test case easily can mess up your SIM. There is
//   no way to set these values from S60 UI. The values below are OK for Nokia
//   test SIMs.
//   Parameters are: SIM location, service center number (in international 
//   format), alpha tag (max. 30 characters).
//
[Test]
title MOD_0001.009_1_NokiaTSY_[HW Store SMS Parameters to SIM]
create NTT_SMS test
pause 1000
test StoreSmsParameters 1 +358454400050 NTN_service_center_--_30_chars
waittestclass test
pause 1000
delete test
[Endtest] 


// MOD_0001.010_1_NokiaTSY_[HW Receive Class 1 SMS message]
//
// Precondition: 
// - You must have also another phone available and sending sms should work properly.
// - Make sure that SMS to sent from the server is CLASS 1. If class 2 message is
//   sent, the case fails (-2 because class 1 is expected) and ACK won't be sent
//   to the network and server keeps going to send SMSs until it receives ACK.
//
// Script description:
// - Test can be run with or without CellMO (defined by flag REAL_CELLMO_IN_USE)
// - Note! You have to send sms message to the phone
//
[Test]
title MOD_0001.010_1_NokiaTSY_[HW Receive Class 1 SMS message]
create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable

test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMmTsyActivateSmsRouting            // activate routing
test SetExpectedCompleteIPC EMobileSmsMessagingReceiveMessage   // receive SMS
test SetExpectedCompleteIPC EMobileSmsMessagingAckSmsStored     // AckSmStored
test SetExpectedCompleteIPC EMmTsyDeactivateSmsRouting   // deactivate routing

test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 20000

test ActivateSMSRouting

waittestclass test
pause 2000

test ReceiveSMSMessage Class1

waittestclass test
pause 4000

test AckSMS

waittestclass test
pause 4000

test DeactivateSMSRouting

waittestclass test
pause 3000
test HandleSpecifiedRequests NO
delete test
[Endtest]


// MOD_0001.011_1_NokiaTSY_[HW Nack,resume SMS and Receive SMS message]
//
// Precondition: 
// - You must have also another phone available and sending sms should work properly.
//
// Script description:
// - Note! You have to send sms message to the phone
//
[Test]
title MOD_0001.011_1_NokiaTSY_[HW Nack,resume SMS and Receive SMS message]
create NTT_SMS test

test HandleSpecifiedRequests YES
test InitializeIPCRequestTable

test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo

test SetExpectedCompleteIPC EMmTsyActivateSmsRouting                 // ActivateSMSRouting
test SetExpectedCompleteIPC EMobileSmsMessagingReceiveMessage        // Receive SMS
test SetExpectedCompleteIPC EMobileSmsMessagingNackSmsStored         // Nack
test SetExpectedCompleteIPC EMobileSmsMessagingResumeSmsReception    // Resume SMS
test SetExpectedCompleteIPC EMobileSmsMessagingReceiveMessage        // Receive SMS
test SetExpectedCompleteIPC EMobileSmsMessagingAckSmsStored          // AckSmStored
test SetExpectedCompleteIPC EMmTsyDeactivateSmsRouting               // Deactivate routing

test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo
pause 20000

test ActivateSMSRouting
waittestclass test
pause 1500
//Note!You have to send sms message to the phone
test ReceiveSMSMessage Class1
waittestclass test
pause 4000
test NackSMS 22
waittestclass test
pause 1000
test ResumeSMS
waittestclass test
pause 1500
//Note!You have to send sms message to the phone
test ReceiveSMSMessage Class1
waittestclass test
pause 4000
test AckSMS
waittestclass test
pause 2000
test DeactivateSMSRouting
waittestclass test
pause 1000
delete test
test HandleSpecifiedRequests NO

[Endtest]


// MOD_0001.012_1_NokiaTSY_[HW Read all sms messages]
//
// Precondition: 
// - At least one class 2 message has to be in sms storage 
// - (more details available in Mercury Quality Center).
//
// Script description:
// - n/a
//
[Test]
title MOD_0001.012_1_NokiaTSY_[HW Read all sms messages] 
create NTT_SMS test

test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMmTsyBootNotifySimStatusReadyIPC
test SetExpectedCompleteIPC EMobileSmsMessagingGetMessageStoreInfo
test SetExpectedCompleteIPC EMobilePhoneStoreGetInfo
test SetExpectedCompleteIPC EMobilePhoneStoreReadAllPhase1
pause 10000
test SMSCacheInitialization // Initializing SMS cache. EMmTsyBootNotifySimStatusReadyIPC, EMobileSmsMessagingGetMessageStoreInfo, EMobilePhoneStoreGetInfo

pause 10000

test ReadAllSMSMessage 

allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO

delete test
[Endtest]


// MOD_0001.013_1_NokiaTSY_[HW SIM Message Storage Info]
//
// Precondition: 
// - n/a
//
// Script description:
// - n/a
//
//[Test]
//
///////////////////////////////////////////////////////// 
//
// This is tested earlier and the case can be removed.
// See step SMSCacheInitialization.
//
///////////////////////////////////////////////////////// 
//
//
//title MOD_0001.013_1_NokiaTSY_[HW SIM Message Storage Info]
//create NTT_SMS test
//pause 2000
//test SIMMsgStorageInfo
//waittestclass test
//delete test
//[Endtest]


// MOD_0001.014_1_NokiaTSY_[HW Receive Class 2 SMS message]
//
// Preconditions:
// - There is at least one free SMS slot on SIM 
// - Make sure that SMS to sent from the server is CLASS 2. If class 1 message is
//   sent, the case fails (-2 because class 2 is expected) and ACK won't be sent
//   to the network and server keeps going to send SMSs until it receives ACK.
//
// Needed actions:
// -During the test you have to send class 2 SMS (SIM specific) message to the phone.
// -Class 2 SMS can be sent from IOP Test pages http://195.134.224.167/
//   -more details available in Mercury Quality Center
//
[Test]
title MOD_0001.014_1_NokiaTSY_[HW Receive Class 2 SMS message]
create NTT_SMS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable

test SetExpectedCompleteIPC EMmTsyActivateSmsRouting            // activate routing
test SetExpectedCompleteIPC EMobileSmsMessagingReceiveMessage   // receive SMS
test SetExpectedCompleteIPC EMobileSmsMessagingAckSmsStored     // AckSmStored
test SetExpectedCompleteIPC EMobilePhoneStoreWrite	        // wrote successfully to the sim
test SetExpectedCompleteIPC EMobileSmsMessagingReceiveMessage   // deactivate routing

test ActivateSMSRouting
allownextresult 0
waittestclass test
pause 1500

//Note!You have to send class 2 sms message to the phone
test ReceiveSMSMessage Class2
allownextresult 0
waittestclass test
pause 3000

test AckSMS
allownextresult 0
waittestclass test
pause 1000

test DeactivateSMSRouting
allownextresult 0
waittestclass test
pause 1000

delete test
test HandleSpecifiedRequests NO

[Endtest]
