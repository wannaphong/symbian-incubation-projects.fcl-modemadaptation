//* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
//* All rights reserved.
//* This component and the accompanying materials are made available
//* under the terms of the License "Eclipse Public License v1.0"
//* which accompanies this distribution, and is available
//* at the URL "http://www.eclipse.org/legal/epl-v10.html".
//*
//* Initial Contributors:
//* Nokia Corporation - initial contribution.
//*
//* Contributors:
//*
//* Description:  
//*



// Tests MOD_0008.101 ... MOD_0008.105
// Properly get call barring status:
// Possible options are:
// - BarAllIncoming
// - BarIncomingRoaming
// - BarAllOutgoing
// - BarOutgoingInternational
// - BarOutgoingInternationalExHC

// Script description:
// - The following scripts tests the call barring status query using different query options.

[Test]
title MOD_0008.101_1_NokiaTSY_[HW Getting the call barring status, BarAllIncoming]
create NTT_SS test

test RunIscTestCase 1000
test SyncIscTestCase
test GetCallBarringStatus BarAllIncoming

allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.102_1_NokiaTSY_[HW Getting the call barring status, BarOutgoingInternational]
create NTT_SS test
test RunIscTestCase 1027
test SyncIscTestCase
test GetCallBarringStatus BarOutgoingInternational
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.103_1_NokiaTSY_[HW Getting the call barring status, BarIncomingRoaming]
create NTT_SS test
test RunIscTestCase 1028
test SyncIscTestCase
test GetCallBarringStatus BarIncomingRoaming
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.104_1_NokiaTSY_[HW Getting the call barring status, BarAllOutgoing]
create NTT_SS test
test RunIscTestCase 1029
test SyncIscTestCase
test GetCallBarringStatus BarAllOutgoing
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.105_1_NokiaTSY_[HW Getting the call barring status, BarOutgoingInternationalExHC]
create NTT_SS test
test RunIscTestCase 1030
test SyncIscTestCase
test GetCallBarringStatus BarOutgoingInternationalExHC
allownextresult 0
waittestclass test
delete test
[Endtest]


// Tests MOD_0008.201 ... MOD_0008.253
// Properly get call forwarding status:
// Possible options are:
// - call forwarding condition:
// - CallForwardingUnconditional
// - CallForwardingBusy
// - CallForwardingNoReply
// - CallForwardingNotReachable
// - call forwarding service group:
// - ServiceUnspecified
// - VoiceService
// - AuxVoiceService
// - CircuitDataService
// - PacketDataService
// - FaxService
// - ShortMessageService
// - AllServices
// - AllTele
// - Telephony
// - AllDataTele
// - AllTeleExcSms
// - AllPlmnTele
// - PlmnTele1 ... PlmnTele9
// - PlmnTeleA ... PlmnTeleF
// - AllBearer
// - AllAsync
// - AllSync
// - SyncData
// - AsyncData
// - PacketData
// - PadAccess
// - AllPlmnBearer
// - PlmnBearerServ1 ... PlmnBearerServ9
// - PlmnBearerServA ... PlmnBearerServF
// - AltTele
// - VoiceGroupCall
// - VoiceBroadcast
// - AllGprsBearer

// Preconditions:
// RUN THESE TESTS WITH OTHER THAN NOKIA TEST SIM (for example Sonera)

// Script description:
// - The following scripts tests the call barring status query using different query options.

[Test]
title MOD_0008.201_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, Telephony]
create NTT_SS test

test RunIscTestCase 1001
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy Telephony
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.202_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNotReachable, AllDataTele]
create NTT_SS test
test RunIscTestCase 1031
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNotReachable AllDataTele
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.203_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNoReply, CircuitDataService]
create NTT_SS test
test RunIscTestCase 1032
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNoReply CircuitDataService
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.204_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingUnconditional, FaxService]
create NTT_SS test
test RunIscTestCase 1033
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingUnconditional FaxService
allownextresult 0
waittestclass test
delete test
[Endtest]


//old test that not passed
//[Test]
//title MOD_0008.205_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingUnconditional, PlmnTele6]
//create NTT_SS test
//test GetCallForwardingStatus CallForwardingUnconditional PlmnTele6
//allownextresult 0
//waittestclass test
//delete test
//[Endtest]

[Test]
title MOD_0008.205_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNoReply, Telephony]
create NTT_SS test
test RunIscTestCase 1034
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNoReply Telephony
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.206_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingUnconditional, AllServices]
create NTT_SS test
test RunIscTestCase 1035
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingUnconditional AllServices
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.207_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AllTele]
create NTT_SS test
test RunIscTestCase 1036
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy AllTele
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.208_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNoReply, VoiceService]
create NTT_SS test
test RunIscTestCase 1037
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNoReply VoiceService
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.209_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNotReachable, ShortMessageService]
create NTT_SS test
test RunIscTestCase 1038
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNotReachable ShortMessageService
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.210_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AllTeleExcSms]
create NTT_SS test
test RunIscTestCase 1039
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy AllTeleExcSms
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.211_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNotReachable, PlmnTele1]
create NTT_SS test
test RunIscTestCase 1040
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingNotReachable PlmnTele1
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.212_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele2]
create NTT_SS test
test RunIscTestCase 1041
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele2
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.213_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele3]
create NTT_SS test
test RunIscTestCase 1042
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele3
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.214_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele4]
create NTT_SS test
test RunIscTestCase 1043
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele4
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.215_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele5]
create NTT_SS test
test RunIscTestCase 1044
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele5
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.216_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele7]
create NTT_SS test
test RunIscTestCase 1045
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele7
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.217_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele8]
create NTT_SS test
test RunIscTestCase 1046
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele8
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.218_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele9]
create NTT_SS test
test RunIscTestCase 1047
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTele9
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.219_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleA]
create NTT_SS test
test RunIscTestCase 1048
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleA
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.220_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleB]
create NTT_SS test
test RunIscTestCase 1049
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleB
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.221_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleC]
create NTT_SS test
test RunIscTestCase 1050
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleC
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.222_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleD]
create NTT_SS test
test RunIscTestCase 1051
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleD
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.223_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleE]
create NTT_SS test
test RunIscTestCase 1052
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleE
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.224_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTeleF]
create NTT_SS test
test RunIscTestCase 1053
test SyncIscTestCase
test GetCallForwardingStatus CallForwardingBusy PlmnTeleF
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.225_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AllBearer]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy AllBearer
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.226_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNoReply, AllAsync]
create NTT_SS test
test GetCallForwardingStatus CallForwardingNoReply AllAsync
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.227_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNotReachable, AllSync]
create NTT_SS test
test GetCallForwardingStatus CallForwardingNotReachable AllSync
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.228_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingUnconditional, SyncData]
create NTT_SS test
test GetCallForwardingStatus CallForwardingUnconditional SyncData
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.229_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AsyncData]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy AsyncData
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.230_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ2]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ2
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.231_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ6]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ6
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.232_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServA]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServA
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.233_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServE]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServE
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.234_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingNotReachable, ServiceUnspecified]
create NTT_SS test
test GetCallForwardingStatus CallForwardingNotReachable ServiceUnspecified
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.235_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PacketDataService]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PacketDataService
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.236_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, VoiceGroupCall]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy VoiceGroupCall
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.237_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AllPlmnTele]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy AllPlmnTele
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.238_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PadAccess]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PadAccess
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.239_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AllPlmnBearer]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy AllPlmnBearer
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.240_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ1]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ1
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.241_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ3]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ3
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.242_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ4]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ4
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.243_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ5]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ5
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.244_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ7]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ7
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.245_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ8]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ8
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.246_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServ9]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServ9
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.247_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServB]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServB
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.248_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServC]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServC
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.249_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServD]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServD
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.250_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnBearerServF]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnBearerServF
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.251_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, AuxVoiceService]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy AuxVoiceService
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.252_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, PlmnTele6]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy PlmnTele6
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.253_1_NokiaTSY_[HW Getting the call forwarding status, CallForwardingBusy, ServiceUnspecified]
create NTT_SS test
test GetCallForwardingStatus CallForwardingBusy ServiceUnspecified
allownextresult 0
waittestclass test
delete test
[Endtest]

// Test MOD_0008.301_1
// Properly get call waiting status

// Preconditions:
// Script description:
// - The following script tests the call waiting status query.

[Test]
title MOD_0008.301_1_NokiaTSY_[HW Getting the call waiting status]
create NTT_SS test

test RunIscTestCase 1002
test SyncIscTestCase
test GetCallWaitingStatus

allownextresult 0
waittestclass test
delete test
[Endtest]

// Test MOD_0008.401...MOD_0008.405
// Properly get identity service status
// Possible options are:
// - IdServiceCallerRestriction
// - IdServiceCallerPresentation
// - IdServiceConnectedPresentation
// - IdServiceConnectedRestriction
// - IdServiceCallerName

// Script description:
// - The following scripts tests the identity service status query using different query options.

[Test]
title MOD_0008.401_1_NokiaTSY_[HW Getting the identity service status, IdServiceCallerRestriction]
create NTT_SS test

test RunIscTestCase 1003
test SyncIscTestCase
test GetIdentityServiceStatus IdServiceCallerRestriction
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.402_1_NokiaTSY_[HW Getting the identity service status, IdServiceCallerPresentation]
create NTT_SS test
test RunIscTestCase 1026
test SyncIscTestCase
test GetIdentityServiceStatus IdServiceCallerPresentation
allownextresult 0
waittestclass test
delete test
[Endtest]

// Test MOD_0008.501...MOD_0008.509
// Properly get identity service status
// Possible options are:
// - call barring condition:
// - BarUnspecified
// - BarAllIncoming
// - BarIncomingRoaming
// - BarAllOutgoing
// - BarOutgoingInternational
// - BarOutgoingInternationalExHC
// - BarAllCases
// - BarAllOutgoingServices
// - BarAllIncomingServices
// - call barring service group:
// - ServiceUnspecified
// - VoiceService
// - AuxVoiceService
// - CircuitDataService
// - PacketDataService
// - FaxService
// - ShortMessageService
// - AllServices
// - AllTele
// - Telephony
// - AllDataTele
// - AllTeleExcSms
// - call barring action:
// - ServiceActionRegister
// - ServiceActionActivate
// - ServiceActionDeactivate
// - ServiceActionErase
// - call barring password:
// - Pre defined barring password

// Preconditions:
//  The conditions EBarAllCases, EBarAllOutgoingServices,
//  EBarAllIncomingServices are only possible in conjunction
//  with the actions EServiceActionDeactivate and EServiceActionErase.
//
//  Conditions EBarAllCases, EBarAllOutgoingServices and
//  EBarAllIncomingServices are only used for deactivation.
//
//
//  NOTICE THAT THESE CASES NEED CALL BARRING PASSWORD AND THE DEFAULT IS 1234, REMEMBER TO
//  CHANGE IT IF IT IS DIFFERENT IN YOUR SIM

// Script description:
// - The following scripts tests the identity service status query using different query options.

[Test]
title MOD_0008.501_1_NokiaTSY_[HW Setting call barring status, BarAllIncoming, ShortMessageService, ServiceActionActivate]
create NTT_SS test

test RunIscTestCase 1004
test SyncIscTestCase
test SetCallBarringStatus BarAllIncoming ShortMessageService ServiceActionActivate 1234

allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.502_1_NokiaTSY_[HW Setting call barring status, BarOutgoingInternationalExHC, AllTeleExcSms, ServiceActionDeactivate]
create NTT_SS test
test RunIscTestCase 1054
test SyncIscTestCase
test SetCallBarringStatus BarOutgoingInternationalExHC AllTeleExcSms ServiceActionDeactivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.503_1_NokiaTSY_[HW Setting call barring status, BarIncomingRoaming, AllServices, ServiceActionDeactivate]
create NTT_SS test
test RunIscTestCase 1055
test SyncIscTestCase
test SetCallBarringStatus BarIncomingRoaming AllServices ServiceActionDeactivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.504_1_NokiaTSY_[HW Setting call barring status, BarOutgoingInternationalExHC, Telephony, ServiceActionActivate]
create NTT_SS test
test RunIscTestCase 1056
test SyncIscTestCase
test SetCallBarringStatus BarOutgoingInternationalExHC Telephony ServiceActionActivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.505_1_NokiaTSY_[HW Setting call barring status, BarAllCases, ShortMessageService, ServiceActionDeactivate]
create NTT_SS test
test RunIscTestCase 1057
test SyncIscTestCase
test SetCallBarringStatus BarAllCases ShortMessageService ServiceActionDeactivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.506_1_NokiaTSY_[HW Setting call barring status, BarAllOutgoing, CircuitDataService, ServiceActionActivate]
create NTT_SS test
test RunIscTestCase 1058
test SyncIscTestCase
test SetCallBarringStatus BarAllOutgoing CircuitDataService ServiceActionActivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.507_1_NokiaTSY_[HW Setting call barring status, BarOutgoingInternational, VoiceService, ServiceActionActivate]
create NTT_SS test

test RunIscTestCase 1005
test SyncIscTestCase
test SetCallBarringStatus BarOutgoingInternational VoiceService ServiceActionActivate 1234

allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.508_1_NokiaTSY_[HW Setting call barring status, BarAllOutgoingServices, FaxService, ServiceActionDeactivate]
create NTT_SS test
test RunIscTestCase 1065
test SyncIscTestCase
test SetCallBarringStatus BarAllOutgoingServices FaxService ServiceActionDeactivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.509_1_NokiaTSY_[HW Setting call barring status, BarAllIncomingServices, AllDataTele, ServiceActionDeactivate]
create NTT_SS test
test RunIscTestCase 1066
test SyncIscTestCase
test SetCallBarringStatus BarAllIncomingServices AllDataTele ServiceActionDeactivate 1234
allownextresult 0
waittestclass test
delete test
[Endtest]

// Test MOD_0008.601...MOD_0008.607
// Try to set impossible call forwarding status (case MOD_0008_601)
// Properly set call forwarding status (other cases)
// Possible options are:
// call forwarding condition:
// - CallForwardingUnspecified
// - CallForwardingUnconditional
// - CallForwardingBusy
// - CallForwardingNoReply
// - CallForwardingNotReachable
// - CallForwardingAllCases
// - CallForwardingAllConditionalCases
// call forwarding service group:
// - ServiceUnspecified
// - VoiceService
// - AuxVoiceService
// - CircuitDataService
// - PacketDataService
// - FaxService
// - ShortMessageService
// - AllServices
// - AllTele
// - Telephony
// - AllDataTele
// - AllTeleExcSms
// call forwarding action:
// - ServiceActionRegister
// - ServiceActionActivate
// - ServiceActionDeactivate
// - ServiceActionErase
// call forwarding number type:
// - UnknownNumber
// - InternationalNumber
// - NationalNumber
// - NetworkSpecificNumber
// - SubscriberNumber
// - AlphanumericNumber
// - AbbreviatedNumber
// call forwarding numbering plan:
// - UnknownNumberingPlan
// - IsdnNumberPlan
// - DataNumberPlan
// - TelexNumberPlan
// - ServiceCentreSpecificPlan1     //not possible
// - ServiceCentreSpecificPlan2     //not possible
// - NationalNumberPlan
// - PrivateNumberPlan
// - ERMESNumberPlan            //not possible
// call forwarding number:
// - Phone number where the selected service is forwarded
// call forwarding "no reply" timeout:
// - Timeout for no reply condition.

// Preconditions:
// - Cases MOD_0008.602 and MOD_0008.607 WORKS WITH NOKIA TEST NETWORK SIM, NOT WITH SONERA SIM

// Script description:
// - The following scripts tests the setting of call forwarding status using different options.


[Test]
title MOD_0008.601_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingBusy, PacketDataService, ServiceActionRegister, NationalNumber, DataNumberPlan]
create NTT_SS test

test RunIscTestCase 1006
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingBusy PacketDataService ServiceActionRegister NationalNumber DataNumberPlan 04544101642 5

//KErrArgument, KErrGsmSSUnexpectedDataValue
allownextresult -289603590
waittestclass test
delete test
[Endtest]


//Works with Nokia test network sim, not with Sonera sim
[Test]
title MOD_0008.602_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingBusy, AllTele, ServiceActionErase, InternationalNumber, TelexNumberPlan]
create NTT_SS test
test RunIscTestCase 1059
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingBusy AllTele ServiceActionErase InternationalNumber TelexNumberPlan 04544101642 10
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.603_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingUnconditional, Telephony, ServiceActionErase, NetworkSpecificNumber, TelexNumberPlan]
create NTT_SS test
test RunIscTestCase 1060
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingUnconditional Telephony ServiceActionErase NetworkSpecificNumber TelexNumberPlan 04544101642 10
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.604_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingUnconditional, Telephony, ServiceActionErase, SubscriberNumber, IsdnNumberPlan]
create NTT_SS test
test RunIscTestCase 1061
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingUnconditional Telephony ServiceActionErase SubscriberNumber IsdnNumberPlan 04544101642 10
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.605_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingAllConditionalCases, Telephony, ServiceActionErase, NationalNumber, UnknownNumberingPlan]
create NTT_SS test
test RunIscTestCase 1062
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingAllConditionalCases Telephony ServiceActionErase NationalNumber UnknownNumberingPlan 04544101642 15
allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.606_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingAllConditionalCases, AllTele, ServiceActionErase, AbbreviatedNumber, PrivateNumberPlan]
create NTT_SS test
test RunIscTestCase 1063
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingAllConditionalCases AllTele ServiceActionErase AbbreviatedNumber PrivateNumberPlan 04544101642 15
allownextresult 0
waittestclass test
delete test
[Endtest]


//Works with Sonera sim, not with Nokia test network sim
[Test]
title MOD_0008.607_1_NokiaTSY_[HW Setting call forwarding status, CallForwardingAllConditionalCases, Telephony, ServiceActionErase, SubscriberNumber, TelexNumberPlan]
create NTT_SS test
test RunIscTestCase 1064
test SyncIscTestCase
test SetCallForwardingStatus CallForwardingAllConditionalCases Telephony ServiceActionErase SubscriberNumber TelexNumberPlan 04544101642 10
allownextresult 0
waittestclass test
delete test
[Endtest]


// Test MOD_0008.701...MOD_0008.703
// Properly set call waiting status
// Possible options are:
// call waiting service group:
// - ServiceUnspecified
// - VoiceService
// - AuxVoiceService
// - CircuitDataService
// - PacketDataService
// - FaxService
// - ShortMessageService
// - AllServices
// - AllTele
// - Telephony
// - AllDataTele
// - AllTeleExcSms
// call waiting action:
// - ServiceActionActivate
// - ServiceActionDeactivate

// Script description:
// - The following scripts tests the setting of call waiting status using different options.


[Test]
title MOD_0008.701_1_NokiaTSY_[HW Setting call waiting status, FaxService, ServiceActionActivate]
create NTT_SS test

test RunIscTestCase 1007
test SyncIscTestCase
test SetCallWaitingStatus FaxService ServiceActionActivate

allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.702_1_NokiaTSY_[HW Setting call waiting status, AllTele, ServiceActionDeactivate]
create NTT_SS test

test RunIscTestCase 1008
test SyncIscTestCase
test SetCallWaitingStatus AllTele ServiceActionDeactivate

allownextresult 0
waittestclass test
delete test
[Endtest]

// Test MOD_0008.801
// Properly set supplementary services password

// Possible options are:
// old password:
// - old supplementary services password
// new password:
// - desired supplementary services password
// verified password:
// - verification for new password
// service code:
// - 0 (for all services)
// - 330 (for call barring)

Preconditions:
// - NOTICE THAT THIS CASE NEED CALL BARRING PASSWORD AND THE DEFAULT IS 1234,
//   REMEMBER TO CHANGE IT IF IT IS DIFFERENT IN YOUR SIM.

// Script description:
// - The following scripts tests the setting of Properly set supplementary services password.

[Test]
title MOD_0008.801_1_NokiaTSY_[HW Set supplementary services password for call barring]
create NTT_SS test

test RunIscTestCase 1009
test SyncIscTestCase
test SetSupplementaryServicesPassword 1234 1234 1234 330

allownextresult 0
waittestclass test
delete test
[Endtest]


//***********************************
// Get Call Forwarding Number
// parameters:
//  none
//***********************************

//[Test]
//title MOD_0008.901_1_NokiaTSY_[HW Get call forwarding number]
//create NTT_SS test
//test GetCallForwardingNumber
//allownextresult 0
//waittestclass test
//delete test
//[Endtest]


// Test MOD_0008.1001_1
// Send USSD message *12#
// Possible options are:
// - SendUSSDMessage
//   parameters:
//   - data coding scheme
//   - type of USSD message
//   - format of the message data buffer
//   - bit-mask flags indicating which attributes are present in this instance:
//     - 001 UssdDataFormat
//     - 010 UssdMessageType
//     - 100 UssdMessageDcs
//   - n packed message octets (USSD packing)
// - USSDSendRelease
//   parameters:
//   - none

Preconditions:
// - USE NTN SIM.

// Script description:
// - The following scripts tests the sending of USSD message *12#.

[Test]
title MOD_0008.1001_1_NokiaTSY_[HW Send USSD Message (star)12#]
create NTT_SS test

test RunIscTestCase 1010
test SyncIscTestCase
test SendUSSDMessage 0 UssdMORequest FormatPackedString 7 170 152 108 4

allownextresult 0
waittestclass test
delete test
[Endtest]

[Test]
title MOD_0008.1002_1_NokiaTSY_[HW Send USSD Message (star)12#, Send USSD End]
create NTT_SS test

test RunIscTestCase 1010
test SyncIscTestCase
test SendUSSDMessage 0 UssdMORequest FormatPackedString 7 170 152 108 4

allownextresult 0
waittestclass test

test RunIscTestCase 1068
test SyncIscTestCase

test USSDSendRelease

allownextresult 0
waittestclass test

delete test
[Endtest]



// Properly Set and Get Icc Voice Message Waiting Indicators
// Preconditions: use Get To Identify first type of Simcard.
// Script description:
// - The following script tests the Icc Voice Message Waiting Indicators query.

// MOD_0008.1100_1_NokiaTSY_[HW Getting the Icc Voice Message Waiting Indicators]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes either CPHS or Rel4 type indicator flag (e.g. Orange simcard).
// - Only one type of voice message flags are returned in the response (Release4 or CPHS).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Get Icc Voice Message Waiting Indicators query.
// - Parameters are not used.
//
[Test]
title MOD_0008.1100_1_NokiaTSY_[HW Getting the Icc Voice Message Waiting Indicators]
create NTT_SS test

test RunIscTestCase 1071
test SyncIscTestCase
test GetIccMessageWaitingIndicators

allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1101_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes CPHS type indicator flag (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator flag value to 1; (DisplayVoicemailActive = 1)
// - other parameters are not used on the CPHS cases.
// - Release 4 has greater priority then CPHS.
// - Line "Test GetIccMessageWaitingIndicators" is used define type of indicator flag.
//
[Test]
title MOD_0008.1101_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive]
create NTT_SS test
// Get method is used to identify subblock type (CPHS)

test RunIscTestCase 1071
test SyncIscTestCase
test GetIccMessageWaitingIndicators

allownextresult 0
waittestclass test

// Request checking is not possible, because the request to be sent is also dependent the indicators which
// have been got during Icc message waiting indicators query.
test SetIccMessageWaitingIndicators 1 0 0 0 0 0 0

allownextresult 0
waittestclass test

delete test
[Endtest]

// MOD_0008.1102_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes CPHS type indicator flag (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator flag value to 3; (DisplayVoicemailActive = 1 and DisplayFaxActive = 2)
// - other parameters are not used on the CPHS cases.
// - Release 4 has greater priority then CPHS.
// - Line "Test GetIccMessageWaitingIndicators" is used define type of indicator flag.
//
[Test]
title MOD_0008.1102_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive]
create NTT_SS test
// Get method is used to identify subblock type (CPHS)
test RunIscTestCase 1071
test SyncIscTestCase
test GetIccMessageWaitingIndicators
allownextresult 0
waittestclass test

// Request checking is not possible, because the request to be sent is also dependent the indicators which
// have been got during Icc message waiting indicators query.
test SetIccMessageWaitingIndicators 3 0 0 0 0 0 0
allownextresult 0
waittestclass test
  delete test
[Endtest]

// MOD_0008.1103_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayAuxVoicemailActive]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes CPHS type indicator flag (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 13; (DisplayVoicemailActive = 1, DisplayFaxActive = 2
//   and DisplayAuxVoicemailActive = 10)
// - other parameters are not used on the CPHS cases.
// - Release 4 has greater priority then CPHS.
// - Line "Test GetIccMessageWaitingIndicators" is used define type of indicator flag.
//
[Test]
title MOD_0008.1103_1_NokiaTSY_[HW Setting the CPHS Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayAuxVoicemailActive]
create NTT_SS test
// Get method is used to identify subblock type (CPHS)
test RunIscTestCase 1071
test SyncIscTestCase
test GetIccMessageWaitingIndicators
allownextresult 0
waittestclass test

// Request checking is not possible, because the request to be sent is also dependent the indicators which
// have been got during Icc message waiting indicators query.
test SetIccMessageWaitingIndicators 13 0 0 0 0 0 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1104_1_NokiaTSY_[HW Setting the Icc CPHS Type Message Waiting Indicators, DisplayVoicemailActive|KDisplayAuxVoicemailActive|DisplayFaxActive|DisplayDataActive]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes CPHS type indicator flag (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 33; (DisplayVoicemailActive = 1, DisplayFaxActive = 2,
//   DisplayAuxVoicemailActive = 10 and DisplayDataActive = 20)
// - other parameters are not used on the CPHS cases.
// - Release 4 has greater priority then CPHS.
// - Line "Test GetIccMessageWaitingIndicators" is used define type of indicator flag.
//
[Test]
title MOD_0008.1104_1_NokiaTSY_[HW Setting the Icc CPHS Type Message Waiting Indicators, DisplayVoicemailActive|KDisplayAuxVoicemailActive|DisplayFaxActive|DisplayDataActive]
create NTT_SS test
// Get method is used to identify subblock type (CPHS)
test RunIscTestCase 1071
test SyncIscTestCase
test GetIccMessageWaitingIndicators
allownextresult 0
waittestclass test

// Request checking is not possible, because the request to be sent is also dependent the indicators which
// have been got during Icc message waiting indicators query.
test SetIccMessageWaitingIndicators 33 0 0 0 0 0 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1105_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 1; (DisplayVoicemailActive = 1)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1105_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1076
test SyncIscTestCase
test SetIccMessageWaitingIndicators 1 1 0 0 0 0 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1106_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 3; (DisplayVoicemailActive = 1 and DisplayFaxActive = 2)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1106_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1077
test SyncIscTestCase
test SetIccMessageWaitingIndicators 3 2 0 0 1 0 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1107_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayEmailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 5; (DisplayVoicemailActive = 1 and DisplayEmailActive = 4)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1107_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayEmailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1078
test SyncIscTestCase
test SetIccMessageWaitingIndicators 5 3 0 0 0 2 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1108_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayEmailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 7; (DisplayVoicemailActive = 1,
//   DisplayFaxActive = 2 and DisplayEmailActive = 4)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1108_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayEmailActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1079
test SyncIscTestCase
test SetIccMessageWaitingIndicators 7 4 0 0 2 3 0
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1109_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayOtherActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 11; (DisplayVoicemailActive = 1,
//   DisplayFaxActive = 2 and DisplayOtherActive = 8)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1109_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayOtherActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1080
test SyncIscTestCase
test SetIccMessageWaitingIndicators 11 1 0 0 2 0 3
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1110_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayEmailActive|DisplayOtherActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
//
// Precondition:
// - (U)SIM Simcard EF-MWIS file includes Rel4 type indicator flag and the number of messages waiting  (e.g. Orange simcard).
// - For the meantime NTN simcard doesn't include this EF-MWIS.
//
// Script description:
// - The following script tests the Set Icc Voice Message Waiting Indicators request.
// - First parameter is flag, which specify whether indicator should be displayed or not.
// - This script set indicator value to 15; (DisplayVoicemailActive = 1, DisplayFaxActive = 2,
//   DisplayEmailActive = 4 and DisplayOtherActive = 8)
// - second parameters is the number of voicemail messages.
// - third parameters is the number of voicemail messages for Aux line.
// - 4th parameters is the number of Data messages.
// - 5th parameters is the number of Fax messages.
// - 6th parameters is the number of Email messages.
// - 7th parameters is the number of Other messages.
// - Release 4 has greater priority then CPHS; Assumption also in NokiaTSY;
//   No need to call "test GetIccMessageWaitingIndicators" beforehand.
//
[Test]
title MOD_0008.1110_1_NokiaTSY_[HW Setting the Rel4 Type Icc Voice Message Waiting Indicators, DisplayVoicemailActive|DisplayFaxActive|DisplayEmailActive|DisplayOtherActive, VoiceMsgs, AuxVoiceMsgs, DataMsgs, FaxMsgs, EmailMsgs, OtherMsgs]
create NTT_SS test
test RunIscTestCase 1081
test SyncIscTestCase
test SetIccMessageWaitingIndicators 15 4 0 0 3 2 1
allownextresult 0
waittestclass test
delete test
[Endtest]

// MOD_0008.1200_1_NokiaTSY_[HW Getting the Icc call forwarding status]
//
// Precondition:
// - (U)SIM Simcard EF-CFIS file includes either CPHS or Rel4 type indicator flag (e.g. Orange simcard).
// - Only one type of call forwarding indicator flags are returned in the response (Release4 or CPHS).
//
// Script description:
// - The following script tests the Get Icc Call Forwarding Status query.
// - Parameters are not used.
//
[Test]
title MOD_0008.1200_1_NokiaTSY_[HW Getting the Icc call forwarding status]
create NTT_SS test

test RunIscTestCase 1070
test SyncIscTestCase
test GetIccCallForwardingStatus

allownextresult 0
waittestclass test

delete test
[Endtest]


// MOD_0008.20000_1_NokiaTSY_[HW Remove all call barrings, waitings and forwardings]
//
//   Preconditions:
// - NOTICE THAT THIS CASE NEED CALL BARRING PASSWORD AND THE DEFAULT IS 1234,
//   REMEMBER TO CHANGE IT IF IT IS DIFFERENT IN YOUR SIM.
//
// Script description:
// - The following script removes all settings (barrings, waitings and forwardings)
//   made during testing and this test should be run at last always when any setting
//   has been done during SS testing.
//   See e.g. case MOD_0008.703_NokiaTSY_[Setting call waiting status, PacketDataService, ServiceActionActivate]
//
[Test]
title MOD_0008.20000_1_NokiaTSY_[HW Remove all call barrings, waitings and forwardings]
create NTT_SS test

test SetCallBarringStatus BarAllCases AllServices ServiceActionDeactivate 1234
allownextresult 0
waittestclass test

test SetCallWaitingStatus AllServices ServiceActionDeactivate
allownextresult 0
waittestclass test

//number plan and number type are obsolete, so are the tel number and timeout
test SetCallForwardingStatus CallForwardingAllCases AllServices ServiceActionErase UnknownNumber UnknownNumberingPlan 04544101642 5
allownextresult 0
waittestclass test

delete test
[Endtest]


// title MOD_0008.20001_1_NokiaTSY_[HW Register unconditional call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Remove all call waitings, forwardings and barrings before this test case ( e.g. run
//   the test case MOD_0008.20000_1_NokiaTSY_[HW Remove all call barrings, waitings and forwardings]
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: register/activate
// - SS code: 21 (CFU)
// - forwarding number: 04544186408
// - basic service code: 11
//
[Test]
title MOD_0008.20001_1_NokiaTSY_[HW Register unconditional call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1015
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck **21*04544186408*11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20002_1_NokiaTSY_[HW Deactivate unconditional call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN ( if not already activated )
// - Test case MOD_0008.20001_1_NokiaTSY_[HW Register unconditional call forwarding SAT originated]
//   must be run before this case ( service must have been registered )
//
// Script description:
// - SAT originated SS string
// - operation: deactivate
// - SS code: 21 (CFU)
// - basic service code: 11
//
[Test]
title MOD_0008.20002_1_NokiaTSY_[HW Deactivate unconditional call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1016
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck #21**11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20003_1_NokiaTSY_[HW Activate unconditional call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN ( if not already activated )
// - Test case MOD_0008.20002_1_NokiaTSY_[HW Deactivate unconditional call forwarding, SAT originated]
//   must be run before this case ( service must have been registered and deactivated )
//
// Script description:
// - SAT originated SS string
// - operation: activate
// - SS code: 21 (CFU)
// - basic service code: 11
//
[Test]
title MOD_0008.20003_1_NokiaTSY_[HW Activate unconditional call forwarding SAT ]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1017
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *21**11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20004_1_NokiaTSY_[HW Interrogate unconditional call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN ( if not already activated )
//
// Script description:
// - SAT originated SS string
// - operation: interrogate
// - SS code: 21 (CFU)
// - basic service code: 11
//
[Test]
title MOD_0008.20004_1_NokiaTSY_[HW Interrogate unconditional call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1018
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *#21**11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20005_1_NokiaTSY_[HW Erasure unconditional call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN ( if not already activated )
// - Test case MOD_0008.20001_1_NokiaTSY_[HW Register unconditional call forwarding SAT originated]
//   must be run before this case ( service must have been registered )
//
// Script description:
// - SAT originated SS string
// - operation: activate
// - SS code: 21 (CFU)
// - basic service code: 11
//
[Test]
title MOD_0008.20005_1_NokiaTSY_[HW Erasure unconditional call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1019
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck ##21**11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20006_1_NokiaTSY_[HW Register no reply call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: register/activate
// - SS code: 61 (CF)
// - forwarding number +3584544186408 (use international mode (=> '+' )
// - basic service code: 10
// - no reply time: 20 seconds
//
[Test]
title MOD_0008.20006_1_NokiaTSY_[HW Register no reply call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1020
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck **61*+3584544186408*10*20#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20007_1_NokiaTSY_[HW Erasure no reply call forwarding SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
// - Test case MOD_0008.20006_1_NokiaTSY_[HW Register no reply call forwarding, SAT originated]
//   must be run before this case ( service must have been registered )
//
// Script description:
// - SAT originated SS string
// - operation: erasure
// - SS code: 61 (CF)
// - basic service code: 11
//
[Test]
title MOD_0008.20007_1_NokiaTSY_[HW Erasure no reply call forwarding SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1021
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck ##61**11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20008_1_NokiaTSY_[HW Activate call barring for all outcoming calls SAT ]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: activate
// - SS code: 33 (BAOC)
// - barring password (depends on sim card ): 1234
// - basic service code: 11
//
[Test]
title MOD_0008.20008_1_NokiaTSY_[HW Activate call barring for all outcoming calls SAT ]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1022
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *33*1234*11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20009_1_NokiaTSY_[HW Deactivate call barring for all outcoming calls SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
// - Test case MOD_0008.20008_1_NokiaTSY_[HW Activate call barring for all outcoming calls SAT ]
//   must be run before this case ( service must have been activated )
//
// Script description:
// - SAT originated SS string
// - operation: activate
// - SS code: 33 (BAOC)
// - barring password (depends on sim card ): 1234
// - basic service code: 11
//
[Test]
title MOD_0008.20009_1_NokiaTSY_[HW Deactivate call barring for all outcoming calls SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1023
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck #33*1234*11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.200010_1_NokiaTSY_[HW Register call waiting SAT ]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: activate
// - SS code: 43 (WAIT)
// - basic service code: 11
//
[Test]
title MOD_0008.200010_1_NokiaTSY_[HW Activate call waiting SAT ]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1024
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *43*11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]

// title MOD_0008.200011_1_NokiaTSY_[HW Deactivate call waiting SAT ]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
// - Test case MOD_0008.200010_1_NokiaTSY_[HW Activate call waiting SAT ]
//   must be run before this case ( service must have been activated )
//
// Script description:
// - SAT originated SS string
// - operation: erasure
// - SS code: 43 (WAIT)
// - basic service code: 11
//
[Test]
title MOD_0008.200011_1_NokiaTSY_[HW Deactivate call waiting SAT ]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1025
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck #43*11#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20012_1_NokiaTSY_[HW interrogate MSP1 SAT]
//
//   Preconditions:
// - Use NTN sim
// - This test case is NOT supported, if flag 'NCP_COMMON_S60_VERSION_SUPPORT'
//   is set to value 'S60_VERSION_32'in SW build! ( e.g. in Devlon40 )
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: interrogate
// - SS code: 591 (MSP1)
//
[Test]
title MOD_0008.20012_1_NokiaTSY_[HW interrogate MSP1 SAT originated]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test SetExpectedCompleteIPC EMobilePhoneNotifyAllSendNetworkServiceRequest
test SetSendNetworkServiceRequestTestOngoingFlag YES
test RunIscTestCase 1011
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *#591*1234#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20013_1_NokiaTSY_[HW interrogate CCSB SAT]
//
//   Preconditions:
// - Use NTN sim
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: interrogate
// - SS code: 37 (CCSB)
//
[Test]
title MOD_0008.20013_1_NokiaTSY_[HW interrogate CCSB SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test RunIscTestCase 1012
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *#37*1#
allownextresult -5
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20014_1_NokiaTSY_[HW interrogate CNAP SAT]
//
//   Preconditions:
// - Use NTN sim
// - This test case is NOT supported, if flag 'NCP_COMMON_S60_VERSION_SUPPORT'
//   is set to value 'S60_VERSION_32'in SW build! ( e.g. in Devlon40 )
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: interrogate
// - SS code: 300 (CNAP)
//
[Test]
title MOD_0008.20014_1_NokiaTSY_[HW Interrogate CNAP SAT ]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequestNoFdnCheck
test SetExpectedCompleteIPC EMobilePhoneNotifyAllSendNetworkServiceRequest
test SetSendNetworkServiceRequestTestOngoingFlag YES
test RunIscTestCase 1013
test SyncIscTestCase
test SendNetworkServiceRequestNoFdnCheck *#300#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]


// title MOD_0008.20015_1_NokiaTSY_[HW Send Network Service Request FDN check SAT]
//
//   Preconditions:
// - Use NTN sim
// - This test case is NOT supported, if flag 'NCP_COMMON_S60_VERSION_SUPPORT'
//   is set to value 'S60_VERSION_32'in SW build! ( e.g. in Devlon40 )
// - Activate FDN check for reliable testing: phonebook->options->
//   SIM memory->Fixed dialling numbers->activate FDN
//
// Script description:
// - SAT originated SS string
// - operation: interrogate
// - SS code: 30 (CLIP)
//
[Test]
title MOD_0008.20015_1_NokiaTSY_[HW Send Network Service Request FDN check SAT]
create NTT_SS test
test HandleSpecifiedRequests YES
test InitializeIPCRequestTable
test SetExpectedCompleteIPC EMobilePhoneSendNetworkServiceRequest
test SetExpectedCompleteIPC EMobilePhoneNotifyAllSendNetworkServiceRequest
test SetSendNetworkServiceRequestTestOngoingFlag YES
test RunIscTestCase 1014
test SyncIscTestCase
test SendNetworkServiceRequest *#30#
allownextresult 0
waittestclass test
test HandleSpecifiedRequests NO
delete test
[Endtest]
